version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo Installing Terraform
      - wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
      - unzip terraform_1.5.0_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform --version

  pre_build:
    commands:
      - echo Logging in to AWS
      - aws sts get-caller-identity
      - |
        # Read demo stage from config file
        if [ -f "demo-config.txt" ]; then
          DEMO_STAGE=$(cat demo-config.txt | tr -d '\n')
          echo "Demo Stage from config: $DEMO_STAGE"
        else
          DEMO_STAGE="stage1-basic-ec2"
          echo "Demo Stage (default): $DEMO_STAGE"
        fi
      - echo "Deploying: $DEMO_STAGE"
      - cd demo-project/$DEMO_STAGE
      - |
        cat > backend.tf << EOF
        terraform {
          backend "s3" {
            bucket = "${TF_STATE_BUCKET}"
            key    = "$DEMO_STAGE/terraform.tfstate"
            region = "us-east-1"
          }
        }
        EOF
      - echo "Manual prerequisites assumed to be set up"
      - echo "Ready to deploy $DEMO_STAGE"

  build:
    commands:
      - echo Starting Terraform deployment for $DEMO_STAGE
      - terraform init
      - |
        if [ "$DEMO_STAGE" = "stage4-manual-approval" ]; then
          # Deploy both test and prod for stage 4
          echo "Deploying test environment..."
          terraform plan -var="environment=test" -out=tfplan-test
          terraform apply -auto-approve tfplan-test
          echo "Deploying prod environment..."
          terraform plan -var="environment=prod" -out=tfplan-prod  
          terraform apply -auto-approve tfplan-prod
        else
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
        fi

  post_build:
    commands:
      - echo Terraform deployment completed
      - terraform output
      - echo "âœ… ${DEMO_STAGE:-stage1-basic-ec2} deployment successful!"

artifacts:
  files:
    - '**/*'