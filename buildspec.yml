version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo Installing Terraform
      - wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
      - unzip terraform_1.5.0_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform --version

  pre_build:
    commands:
      - echo Logging in to AWS
      - aws sts get-caller-identity
      - export DEMO_STAGE=$(sed -n '1p' demo-config.txt 2>/dev/null || echo "stage1-basic-ec2")
      - export OPERATION=$(sed -n '2p' demo-config.txt 2>/dev/null || echo "apply")
      - echo "Demo Stage:" $DEMO_STAGE
      - echo "Operation:" $OPERATION
      - cd demo-project/$DEMO_STAGE
      - echo "Ready to" $OPERATION $DEMO_STAGE

  build:
    commands:
      - echo Starting Terraform $OPERATION for $DEMO_STAGE
      - terraform init
      - |
        if [ "$OPERATION" = "destroy" ]; then
          echo "Destroying resources..."
          terraform destroy -auto-approve
        else
          echo "Deploying resources..."
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
        fi

  post_build:
    commands:
      - echo Terraform $OPERATION completed
      - |
        if [ "$OPERATION" = "destroy" ]; then
          echo "✅ $DEMO_STAGE destroyed successfully!"
        else
          terraform output
          echo "✅ $DEMO_STAGE deployment successful!"
        fi

artifacts:
  files:
    - '**/*'